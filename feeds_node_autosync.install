<?php
/**
 * Implements hook_install().
 */
function feeds_node_autosync_install() {
	dpm("install fna");
	if(db_field_exists('node_type','auto_sync_toggle') == "") {
		$toggle_field = array(
			'type' => 'int',
			'not null' => TRUE,
			'default' => 0,
			'description' => 'Toggle setting for auto-sync (feeds) module.',
		);
		db_add_field('node_type', 'auto_sync_toggle', $toggle_field);
	}
	
	if(db_field_exists('node_type','auto_sync_config') == "") {
		$config_field = array(
			'type' => 'blob',
			'size' => 'big',
			'not null' => FALSE,
			'serialize' => TRUE,
			'description' => 'Configuration for auto-sync (feeds) module.',
		);
		db_add_field('node_type', 'auto_sync_config', $config_field);
	}
}

/**
 * Implements hook_uninstall().
 */
function feeds_node_autosync_uninstall() {
	db_drop_field('node_type', 'auto_sync_toggle');
	db_drop_field('node_type', 'auto_sync_config');
}

function feeds_node_autosync_schema() {
	$schema['feeds_node_autosync_config'] = array(
		'description' => t('Table storing autosync config definitions.'),
		'export' => array(
			'key' => 'node_type',
			'key name' => 'Node Type',
			'primary key' => 'oid',
			'identifier' => 'autosync_config', // Exports will be as $myobj
			'default hook' => 'default_mymodule_myobj',  // Function hook name.
		),
		'fields' => array(
			'node_type' => array(
				'type' => 'varchar',
				'length' => '32',
				'description' => 'Unique ID for this object. Matches the node type the settings are for.',
			),
			'oid' => array(
				'type' => 'serial',
				'unsigned' => TRUE,
				'not null' => TRUE,
				'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
				'no export' => TRUE, // Do not export database-only keys.
			),
			'config' => array(
				'type' => 'blob',
				'size' => 'big',
				'description' => 'Unique ID for this object. Matches the node type the settings are for.',
			),
			'primary key' => array('oid'),
			'unique keys' => array(
				'name' => array('name'),
			),
		)
	);
	return $schema;
}